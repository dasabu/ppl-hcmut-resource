 class someMethodWillbeDeclhere{
            int getVal(int x; float y; Point a,b,c){
                this.a[3] := this.callFoo(this.x[this.sqrt(9)]);
                if (x == this.x) then return new Point(1,2,3);
                if (x == this.x[x.foo() * 2 + 1]) then {
                    if this.str[this.str[3]] then return this.x.foo(2);
                    else {
                        break;
                    }
                    if x == 3 * 3 + 1 then continue;
                }
                else break;
            }
            int setVal(){
                for i := 1 to this.foo() do continue;
                for i := this.fooCalling(this.x[this.getVal(this.x[3])]) downto this.valueOfEle() do {
                    continue;
                }
                if check then break;
                else return false && !true;
            }
        }
        class Empty{ 
            # nothing in this class
            /* it is just used for 
            inherited for its subclasses 	
 */
        }
        class Main extends Empty{
            void main(){
                for i := this.foo(x.callExp(670 * true)) downto 1e9 do {
                    this.x[i] := this.y.callingMethod(x.foo());
                    if this.x == 0 then {
                        this.x := this.y.getSomething();
                        return 0;
                    }
                    else return "ramdom_string";
            }
        }
        }
        